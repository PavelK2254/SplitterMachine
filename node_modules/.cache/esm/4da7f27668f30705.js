let getProductsJSON,OrderModel,init,addNewOrdersToDB,getOrderByBarcode;_68f‍.x([["updateDbWithNewOrders",()=>updateDbWithNewOrders],["getSingleOrder",()=>getSingleOrder]]);_68f‍.w("../Networking/dataRepository",[["getProductsJSON",["getProductsJSON"],function(v){getProductsJSON=v}]]);_68f‍.w("../Models/orderModel",[["OrderModel",["OrderModel"],function(v){OrderModel=v}]]);_68f‍.w("../DAO/dbAccessManager",[["init",["init"],function(v){init=v}],["addNewOrdersToDB",["addNewOrdersToDB"],function(v){addNewOrdersToDB=v}],["getOrderByBarcode",["getOrderByBarcode"],function(v){getOrderByBarcode=v}]]);


var currentPage = '1';
var ordersGetter = getProductsJSON(currentPage);
var ordersCollection = [];



       function updateDbWithNewOrders() {

    init().then(function(result) {
        ordersGetter.then(function(result) {
            result.products.forEach(element => {
                console.log(`${element.id} ${element.id} ${element.barcode} 0, 1, ${element.longName}`);
                //ordersCollection.push({ orderNumber: element.id, barcode: element.barcode, numberOfUnits: 0, status: 1, productName: element.longName })
                ordersCollection.push(new OrderModel(element.id, element.barcode, 0, 1, element.longName))
            });
            addNewOrdersToDB(ordersCollection).then(function(result) {
                //getOrderByBarcode('60').then(function(result) {
                _68f‍.g.console.log(result);

            }, function(err) {
                _68f‍.g.console.error(err);
            })
        }, function(err) {
            _68f‍.g.console.log(err);

        })
    }, function(err) {
        _68f‍.g.console.log(err);
    });
}


       function getSingleOrder(barcode) {
    getOrderByBarcode(barcode).then(function(result) {
        _68f‍.g.console.log(result);

    }, function(err) {
        _68f‍.g.console.log(err);
    });
}