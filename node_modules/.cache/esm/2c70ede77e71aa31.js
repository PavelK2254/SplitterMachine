let updateDbWithNewOrders,getSingleOrder,addTestOrders,initDB,resetDBStatuses,OrderModel,initTcpServer;_7e7‍.w("./Controller/ordersFetcher",[["updateDbWithNewOrders",["updateDbWithNewOrders"],function(v){updateDbWithNewOrders=v}],["getSingleOrder",["getSingleOrder"],function(v){getSingleOrder=v}],["addTestOrders",["addTestOrders"],function(v){addTestOrders=v}],["initDB",["initDB"],function(v){initDB=v}],["resetDBStatuses",["resetDBStatuses"],function(v){resetDBStatuses=v}]]);_7e7‍.w("./Models/orderModel",[["OrderModel",["OrderModel"],function(v){OrderModel=v}]]);_7e7‍.w("./TCPmodule/TCPListener",[["initTcpServer",["initTcpServer"],function(v){initTcpServer=v}]]);



const express = require('express');
const app = express();
const port = 3000;
var bodyParser = require('body-parser');
app.use(bodyParser())

function main() {
    console.log("Connecting to the DB...");
    // fetchNewOrders();

    initDB().then((result) => {
        console.log("DB initialized");
        initTcpServer();
        resetDBStatuses()
    }).catch((error) => {
        console.error(`Error: ${error}`)
    })


}


function getOrder(barcode) {
    getSingleOrder(barcode);
}

function fetchNewOrders() {
    //updateDbWithNewOrders();
    addTestOrders();
}
main();